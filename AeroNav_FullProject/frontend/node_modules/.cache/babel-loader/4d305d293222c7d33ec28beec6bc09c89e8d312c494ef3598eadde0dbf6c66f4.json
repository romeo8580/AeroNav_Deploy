{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\romeo\\\\Desktop\\\\AeroNav_Deploy\\\\frontend\\\\src\\\\components\\\\Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState([]);\n\n  // Mock data for search\n  const data = [{\n    type: \"flight\",\n    name: \"AA101 - New York\"\n  }, {\n    type: \"flight\",\n    name: \"DL202 - Los Angeles\"\n  }, {\n    type: \"gate\",\n    name: \"Gate A1\"\n  }, {\n    type: \"gate\",\n    name: \"Gate B1\"\n  }];\n  const handleSearch = () => {\n    const filtered = data.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n    setResults(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: \"1rem 0\",\n      padding: \"1rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      placeholder: \"Search flights, gates, etc.\",\n      onChange: e => setQuery(e.target.value),\n      style: {\n        padding: \"0.5rem\",\n        width: \"200px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      style: {\n        marginLeft: \"0.5rem\",\n        padding: \"0.5rem\"\n      },\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        marginTop: \"1rem\"\n      },\n      children: results.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.type.toUpperCase(), \": \", item.name]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"Grp0ouI1isRc8g0LMx1FfgxNSWM=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","_s","query","setQuery","results","setResults","data","type","name","handleSearch","filtered","filter","item","toLowerCase","includes","style","margin","padding","children","value","placeholder","onChange","e","target","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","length","marginTop","map","index","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/romeo/Desktop/AeroNav_Deploy/frontend/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function Search() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [results, setResults] = useState([]);\r\n\r\n  // Mock data for search\r\n  const data = [\r\n    { type: \"flight\", name: \"AA101 - New York\" },\r\n    { type: \"flight\", name: \"DL202 - Los Angeles\" },\r\n    { type: \"gate\", name: \"Gate A1\" },\r\n    { type: \"gate\", name: \"Gate B1\" },\r\n  ];\r\n\r\n  const handleSearch = () => {\r\n    const filtered = data.filter(item =>\r\n      item.name.toLowerCase().includes(query.toLowerCase())\r\n    );\r\n    setResults(filtered);\r\n  };\r\n\r\n  return (\r\n    <div style={{ margin: \"1rem 0\", padding: \"1rem\" }}>\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        placeholder=\"Search flights, gates, etc.\"\r\n        onChange={e => setQuery(e.target.value)}\r\n        style={{ padding: \"0.5rem\", width: \"200px\" }}\r\n      />\r\n      <button\r\n        onClick={handleSearch}\r\n        style={{ marginLeft: \"0.5rem\", padding: \"0.5rem\" }}\r\n      >\r\n        Search\r\n      </button>\r\n\r\n      {results.length > 0 && (\r\n        <ul style={{ marginTop: \"1rem\" }}>\r\n          {results.map((item, index) => (\r\n            <li key={index}>\r\n              {item.type.toUpperCase()}: {item.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMS,IAAI,GAAG,CACX;IAAEC,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAmB,CAAC,EAC5C;IAAED,IAAI,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAsB,CAAC,EAC/C;IAAED,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAU,CAAC,EACjC;IAAED,IAAI,EAAE,MAAM;IAAEC,IAAI,EAAE;EAAU,CAAC,CAClC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,MAAM,CAACC,IAAI,IAC/BA,IAAI,CAACJ,IAAI,CAACK,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACZ,KAAK,CAACW,WAAW,CAAC,CAAC,CACtD,CAAC;IACDR,UAAU,CAACK,QAAQ,CAAC;EACtB,CAAC;EAED,oBACEX,OAAA;IAAKgB,KAAK,EAAE;MAAEC,MAAM,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChDnB,OAAA;MACEQ,IAAI,EAAC,MAAM;MACXY,KAAK,EAAEjB,KAAM;MACbkB,WAAW,EAAC,6BAA6B;MACzCC,QAAQ,EAAEC,CAAC,IAAInB,QAAQ,CAACmB,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAE;MACxCJ,KAAK,EAAE;QAAEE,OAAO,EAAE,QAAQ;QAAEO,KAAK,EAAE;MAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF7B,OAAA;MACE8B,OAAO,EAAEpB,YAAa;MACtBM,KAAK,EAAE;QAAEe,UAAU,EAAE,QAAQ;QAAEb,OAAO,EAAE;MAAS,CAAE;MAAAC,QAAA,EACpD;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAERxB,OAAO,CAAC2B,MAAM,GAAG,CAAC,iBACjBhC,OAAA;MAAIgB,KAAK,EAAE;QAAEiB,SAAS,EAAE;MAAO,CAAE;MAAAd,QAAA,EAC9Bd,OAAO,CAAC6B,GAAG,CAAC,CAACrB,IAAI,EAAEsB,KAAK,kBACvBnC,OAAA;QAAAmB,QAAA,GACGN,IAAI,CAACL,IAAI,CAAC4B,WAAW,CAAC,CAAC,EAAC,IAAE,EAACvB,IAAI,CAACJ,IAAI;MAAA,GAD9B0B,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3B,EAAA,CA9CuBD,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}