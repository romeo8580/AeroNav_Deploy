{"ast":null,"code":"const API_URL = process.env.REACT_APP_API_URL;\nexport async function fetchFlights() {\n  try {\n    const res = await fetch(`${API_URL}/flights`);\n    if (!res.ok) throw new Error(\"Failed to fetch flights\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Error fetching flights:\", error);\n    return [];\n  }\n}\nexport async function fetchTerminalMap() {\n  try {\n    const res = await fetch(`${API_URL}/terminal-map`);\n    if (!res.ok) throw new Error(\"Failed to fetch terminal map\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Error fetching terminal map:\", error);\n    return [];\n  }\n}\nexport async function search(query) {\n  try {\n    const res = await fetch(`${API_URL}/search?q=${encodeURIComponent(query)}`);\n    if (!res.ok) throw new Error(\"Search failed\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Error performing search:\", error);\n    return [];\n  }\n}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchFlights","res","fetch","ok","Error","json","error","console","fetchTerminalMap","search","query","encodeURIComponent"],"sources":["C:/Users/romeo/Desktop/AeroNav_Deploy/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL;\nexport async function fetchFlights() {\n  try {\n    const res = await fetch(`${API_URL}/flights`);\n    if (!res.ok) throw new Error(\"Failed to fetch flights\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Error fetching flights:\", error);\n    return [];\n  }\n}\nexport async function fetchTerminalMap() {\n  try {\n    const res = await fetch(`${API_URL}/terminal-map`);\n    if (!res.ok) throw new Error(\"Failed to fetch terminal map\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Error fetching terminal map:\", error);\n    return [];\n  }\n}\nexport async function search(query) {\n  try {\n    const res = await fetch(`${API_URL}/search?q=${encodeURIComponent(query)}`);\n    if (!res.ok) throw new Error(\"Search failed\");\n    return await res.json();\n  } catch (error) {\n    console.error(\"Error performing search:\", error);\n    return [];\n  }\n}\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;AAC7C,OAAO,eAAeC,YAAYA,CAAA,EAAG;EACnC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,UAAU,CAAC;IAC7C,IAAI,CAACK,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IACvD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,OAAO,EAAE;EACX;AACF;AACA,OAAO,eAAeE,gBAAgBA,CAAA,EAAG;EACvC,IAAI;IACF,MAAMP,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,eAAe,CAAC;IAClD,IAAI,CAACK,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,EAAE;EACX;AACF;AACA,OAAO,eAAeG,MAAMA,CAACC,KAAK,EAAE;EAClC,IAAI;IACF,MAAMT,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,OAAO,aAAae,kBAAkB,CAACD,KAAK,CAAC,EAAE,CAAC;IAC3E,IAAI,CAACT,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IAC7C,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,EAAE;EACX;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}