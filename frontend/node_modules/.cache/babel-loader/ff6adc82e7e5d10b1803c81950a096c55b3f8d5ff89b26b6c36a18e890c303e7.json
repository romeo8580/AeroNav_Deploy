{"ast":null,"code":"const API_URL=process.env.REACT_APP_API_URL||'https://<your-backend-url>.onrender.com';export async function fetchFlights(){try{const res=await fetch(\"\".concat(API_URL,\"/flights\"));if(!res.ok)throw new Error(\"Failed to fetch flights\");return await res.json();}catch(error){console.error(\"Error fetching flights:\",error);return[];}}export async function fetchTerminalMap(){try{const res=await fetch(\"\".concat(API_URL,\"/terminal-map\"));if(!res.ok)throw new Error(\"Failed to fetch terminal map\");return await res.json();}catch(error){console.error(\"Error fetching terminal map:\",error);return[];}}export async function search(query){try{const res=await fetch(\"\".concat(API_URL,\"/search?q=\").concat(encodeURIComponent(query)));if(!res.ok)throw new Error(\"Search failed\");return await res.json();}catch(error){console.error(\"Error performing search:\",error);return[];}}","map":{"version":3,"names":["API_URL","process","env","REACT_APP_API_URL","fetchFlights","res","fetch","concat","ok","Error","json","error","console","fetchTerminalMap","search","query","encodeURIComponent"],"sources":["C:/Users/romeo/Desktop/AeroNav_Deploy/frontend/src/api.js"],"sourcesContent":["const API_URL = process.env.REACT_APP_API_URL || 'https://<your-backend-url>.onrender.com';\r\nexport async function fetchFlights() {\r\n  try {\r\n    const res = await fetch(`${API_URL}/flights`);\r\n    if (!res.ok) throw new Error(\"Failed to fetch flights\");\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching flights:\", error);\r\n    return [];\r\n  }\r\n}\r\nexport async function fetchTerminalMap() {\r\n  try {\r\n    const res = await fetch(`${API_URL}/terminal-map`);\r\n    if (!res.ok) throw new Error(\"Failed to fetch terminal map\");\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(\"Error fetching terminal map:\", error);\r\n    return [];\r\n  }\r\n}\r\nexport async function search(query) {\r\n  try {\r\n    const res = await fetch(`${API_URL}/search?q=${encodeURIComponent(query)}`);\r\n    if (!res.ok) throw new Error(\"Search failed\");\r\n    return await res.json();\r\n  } catch (error) {\r\n    console.error(\"Error performing search:\", error);\r\n    return [];\r\n  }\r\n}\r\n"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,yCAAyC,CAC1F,MAAO,eAAe,CAAAC,YAAYA,CAAA,CAAG,CACnC,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,OAAO,YAAU,CAAC,CAC7C,GAAI,CAACK,GAAG,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CACvD,MAAO,MAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C,MAAO,EAAE,CACX,CACF,CACA,MAAO,eAAe,CAAAE,gBAAgBA,CAAA,CAAG,CACvC,GAAI,CACF,KAAM,CAAAR,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,OAAO,iBAAe,CAAC,CAClD,GAAI,CAACK,GAAG,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CAC5D,MAAO,MAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,MAAO,EAAE,CACX,CACF,CACA,MAAO,eAAe,CAAAG,MAAMA,CAACC,KAAK,CAAE,CAClC,GAAI,CACF,KAAM,CAAAV,GAAG,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIP,OAAO,eAAAO,MAAA,CAAaS,kBAAkB,CAACD,KAAK,CAAC,CAAE,CAAC,CAC3E,GAAI,CAACV,GAAG,CAACG,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,eAAe,CAAC,CAC7C,MAAO,MAAM,CAAAJ,GAAG,CAACK,IAAI,CAAC,CAAC,CACzB,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,MAAO,EAAE,CACX,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}